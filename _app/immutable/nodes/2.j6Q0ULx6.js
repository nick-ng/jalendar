import{a as _,t as x}from"../chunks/mZhsh67a.js";import"../chunks/BUy8O6T9.js";import{p as T,l as b,i as O,t as J,j as S,s as g,k as p,m as c,n as $,o as k,q as j,g as m}from"../chunks/DYVyuip6.js";import{s as M}from"../chunks/BSN9d53F.js";import{i as A}from"../chunks/Du5ZZhgP.js";import{o as C}from"../chunks/BtSi8PrY.js";const D="2024-01-01T08:00:00.000Z",G=new Date(D).valueOf(),H=((24*60+4)*60+54.85)*1e3,E={0:"January",1:"February",2:"March",3:"April",4:"May",5:"June",6:"Jayly",7:"July",8:"August",9:"September",10:"October",11:"November",12:"December"},F={1:"Monday",2:"Tuesday",3:"Wednesday",4:"Thursday",5:"Friday",6:"Saturday",0:"Sunday"};function I(t){return t-G}function N(t){const a=I(t)/H/364+2024,o=Math.floor(a),s=(a-o)*364/28,i=Math.floor(s),h=(s-i)*28,n=Math.floor(h),l=(h-n)*(24+4/60+54.85/3600),y=Math.floor(l),f=(l-y)*60,v=Math.floor(f),w=(f-v)*60;return{jear:o,jonth:i,jay:n,hour:y,minute:v,second:w,weekJay:F[n%7]}}function P(t){let e="th";return t%10==1&&t%100!=11?e="st":t%10==2&&t%100!=12?e="nd":t%10==3&&t%100!=13&&(e="rd"),e}function q(t){return`${t.weekJay} the ${t.jay}${P(t.jay)} of ${E[t.jonth]} ${t.jear}`}function B(t){return`${t.hour}:${t.minute.toString().padStart(2,"0")}:${Math.floor(t.second).toString().padStart(2,"0")} JM`}var U=x(`<div><div class="py-8"><div class="text-4xl text-center"> </div> <div class="text-6xl mt-4 text-center"> </div></div> <hr> <div class="max-w-prose mx-auto py-8"><h1>Jalendar</h1> <p>The better way to divide time</p> <h2>Jonths</h2> <p>The jalendar has 13 jonths with 28 jays each. The new jonth is called Jayly and it comes
			between June and July</p> <h2>Jays</h2> <p>Because 13 jonths of 28 jays is only 364 jays, each jay is 24 hours, 4 minutes, and 54.85
			seconds to sync up with seasons. This has the advantage of not needing leap years including
			the complicated rules in the Gregorian calendar that "skips" some leap years.</p> <p>Note that most jays won't line up with the rotation of the earth since the earth rotates once
			every 24 hours. It's recommended most businesses continuously alter their hours of operation
			to match the sun's position in the sky.</p> <p>Also note that most jears won't line up with Gregorian years since a jear is 8765.813 hours
			while a year is 8765.82 hours on average.</p> <h2>Jepoch</h2> <p>00:00 UTC+8 (midnight) on the 1st of January 2024 corresponds to the same time in both the
			jalendar and the Gregorian calendar.</p> <h2>Jomenclature</h2> <p>Coming soon</p></div></div>`);function X(t,e){T(e,!1);const r=j();let a=j(Date.now());C(()=>{const n=()=>{g(a,Date.now()),setTimeout(n,41)};n()}),b(()=>m(a),()=>{g(r,N(m(a)))}),O(),A();var o=U(),u=p(o),s=p(u),i=p(s,!0);J(()=>M(i,q(m(r)))),c(s);var d=$(s,2),h=p(d,!0);J(()=>M(h,B(m(r)))),c(d),c(u),k(4),c(o),_(t,o),S()}export{X as component};
